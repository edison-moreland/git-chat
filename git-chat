#!/bin/bash

inGitChatRepo () {
	# Check that we're in a git repo
	if [ ! -d ".git" ]; then
		return 1
	fi

	# Check that it's a GitChat repo
	if [ ! -f ".gitchat" ]; then
		return 1
	fi

	return 0
}

# Check for git
if ! git --version &>/dev/null; then
  echo "Git is not insalled!"
  exit 1
fi

# Setup git wrapper to optionally make git quiet
if [ "$1" = "quiet-git" ]; then
  ggit () {
    # Make git quiet
    git "$@" &> /dev/null
  }
  shift
else
  ggit () {
    git "$@"
  }
fi

# Now the fun begins
ACTION=$1
case "$ACTION" in
"new-chat")
	# Initialize local repo and remote
	CHATNAME="$2"
	UPSTREAM="$3"

	if [ "$CHATNAME" = "" ]; then
		# Replace with more robust check!
		echo "Chat name required"
		exit 1
	fi

	if [ "$UPSTREAM" = "" ]; then
		echo "Upstream required"
	fi

	ggit init "$CHATNAME"
	pushd "$CHATNAME" || exit 1
		:>| .gitchat
		ggit commit --allow-empty -m "New git chat"
		ggit remote add origin "$UPSTREAM"
		ggit push -u origin master
		ggit branch --set-upstream-to=origin/master master
	popd || exit 1
;;
"clone-chat")
	UPSTREAM="$2"

	if [ "$UPSTREAM" = "" ]; then
		echo "Upstream URL required!"
		exit 1
	fi

	ggit clone "$UPSTREAM"
;;
"new-message")
	if ! inGitChatRepo; then
		echo "Not in git chat repo! Create one with 'git-chat new-chat foo'"
		exit 1
	fi

	MESSAGE="$2"

	if [ "$MESSAGE" = "" ]; then
		echo "Message required!"
		exit 1
	fi
	ggit pull
	ggit commit --allow-empty -m "$MESSAGE"
	ggit push
;;
"show-messages")
	if ! inGitChatRepo; then
		echo "Not in git chat repo! Create one with 'git-chat new-chat foo'"
		exit 1	
	fi

	COUNT=$2
	if [ "$COUNT" = "" ]; then
		# Should also check that COUNT is numerical
		# tput isn't always available, stty should be used if it can't be found
		COUNT=$(tput lines)
		COUNT=$(( COUNT - 1 ))
	fi

	ggit pull
	ggit log -n $COUNT --reverse --pretty=format:"%h - %an, %ar : %s"
;;
"help"|*)
  cat <<EOF
Usage: git-chat [quiet-git] [ACTION] [ACTION-ARGS]
Specifying "quiet-git" will suppress all output from git
Actions:
  new-chat <CHATNAME> <UPSTREAM>
  clone-chat <UPSTREAM>
  new-message <MESSAGE>
  show-messages <optional:COUNT>
  help
EOF
;;
esac
